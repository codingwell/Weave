<project name="Weave" default="compile" basedir=".">
	
	<target name="printinfo">
		<property environment="env" />
		<echo message="${env.BUILD_TAG}"/>
	</target>

	<!-- Prepare the environment -->
	<target name="init" depends="printinfo">
		
		<!-- Ant Contrib (Extra tasks) -->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		  <classpath>
		    <pathelement location="lib/ant-contrib-1.0b3.jar"/>
		  </classpath>
		</taskdef>
		
		<!-- Eclipse "Special" Compiler -->
		<if>
			<equals arg1="${eclipse.running}" arg2="true" />
			<then>
				<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
			</then>
		</if>
		
		<!-- Vars -->
		<property name="cc.ver.src" value="1.5" /> <!-- Source code complience -->
		<property name="cc.ver.tgt" value="1.5" /> <!-- JRE Minimum -->
		
		<!-- Some paths -->
		<property name="dir.src" value="src" />
		<property name="dir.out" value="bin" />
		
		<!-- Libraries -->
		<property name="lib.parboiled" value="lib/parboiled4j-0.9.9.0" />
		
		<!-- Classpath -->
		<path id="classpath.base">
			<pathelement location="lib/junit-4.8.2.jar" />
			<!--<pathelement location="lib/ant-junit.jar" />-->
		</path>
		
		<!--
		
		<property name="instrumentDir" value="classes-instrumented" />
		<property name="requiredDir" value="Required" />
		<property name="javadocDir" value="doc" />
		<property name="lib.parboiled" value="lib/parboiled4j-0.9.9.0" />
		<property name="findbugs.home" value="lib/findbugs-1.3.5-rc1" />
		<property name="cobertura.dir" value="lib/cobertura" />
		<property name="deployDir" value="/home/webmaster/public_html/updates/bc/dev" />
		
		<property name="emma.verbosity" value="verbose" />
		
		<property name="coverage.dir" value="coverage" />
		<property name="emma.dir" value="lib/emma" />
		<path id="emma.lib">
			<fileset dir="${emma.dir}">
				<include name="*.jar"/>
			</fileset>
		</path>-->
<!--   
		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
		
		
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${findbugs.home}/lib/findbugs-ant.jar" />
		<taskdef resource="checkstyletask.properties">
			<classpath>
				<pathelement location="lib/checkstyle-all-5.0-beta01.jar"/>
				<pathelement location="lib/Defcon1Checks.jar"/>
			</classpath>
		</taskdef>
		
		<path id="classpath.base">
			<pathelement location="lib/junit-4.5.jar" />
			<pathelement location="lib/ant-junit.jar" />
		</path>
		<path id="cobertura.classpath">
			<fileset dir="${cobertura.dir}">
				<include name="cobertura.jar" />
				<include name="lib/**/*.jar" />
			</fileset>
		</path>
		<path id="classpath.test">
			<path refid="cobertura.classpath" />
			--><!--<path refid="emma.lib" />-->
<!--
			<pathelement location="${instrumentDir}" />
			<pathelement location="${outputDir}" />
			<path refid="classpath.base" />
		</path>
		-->
		
		<!--<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="classpath.base"/>-->
		
		<!--<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />-->
	</target>
	
	<!-- Cleanup Build -->
	<target name="clean" depends="init">
		<delete dir="${dir.out}" />
		<!--<delete dir="${javadocDir}"/>-->
	</target>
	
	<!-- Prepare Build -->
	<target name="prepare" depends="clean">
		<mkdir dir="${dir.out}" />
	</target>
	
	<!-- Build -->
	<target name="compile" depends="prepare">
		<javac debug="true" debuglevel="vars,lines,source" srcdir="${dir.src}" destdir="${dir.out}" source="${cc.ver.src}" target="${cc.ver.tgt}" >
			<classpath refid="classpath.base"/>
		</javac>
	</target>
	
	<!-- ====================================================== -->
	<!-- JavaDocs -->
	<!-- ====================================================== -->
<!--	<target name="docs" depends="compile,docs-init" description="Generate JavaDocs.">
	    <javadoc
	        destdir="${javadocDir}"
	        author="true"
	        version="true"
	        use="true"
	        windowtitle="${ant.project.name}"
	    	sourcepath="${sourceDir}"
	    	sourcefiles = "${sourceDir}/BC.java"
	    	packagenames = "net.sf.backcomp.*"
	        verbose="false"
	    >
			<classpath refid="classpath.base"/>
	        <doctitle><![CDATA[<h1>${ant.project.name}</h1>]]></doctitle>
	        <bottom>
	            <![CDATA[<i>Copyright &#169; 2008 All Rights Reserved.</i>]]>
	        </bottom>
	        --><!-- <tag name="todo" scope="all" description="To do:"/> -->
<!--	    </javadoc>
	</target>
	<target name="docs-init">
	    <mkdir dir="${javadocDir}"/>
	</target>

	<target name="findbugs" depends="compile" description="Finds common programming mistakes.">
		<findbugs home="${findbugs.home}" output="xml" outputFile="findbugs.xml">
			<sourcePath path="${sourceDir}" />
			<class location="${outputDir}" />
		</findbugs>
	</target>

	<target name="checkstyle" depends="compile"
	 description="Checks that we are using consistant well formed style.">
		<checkstyle config="config_checkstyle.xml" failOnViolation="false">
			<fileset dir="src" includes="**/*.java"/>
			<formatter type="xml" toFile="checkstyle-result.xml"/>
		</checkstyle>
	</target>
	
	--><!-- ====================================================== -->
	<!-- Verify we haven't broken anything. (We may only want to check the updater in the future before deploy) -->
	<!-- ====================================================== -->
<!--	
	<target name="instrument" depends="compile">
		<cobertura-instrument todir="${instrumentDir}">
			<fileset dir="${outputDir}">
				<include name="**/*.class"/>
				<exclude name="**/Test*.class" />
			</fileset>
		</cobertura-instrument>
		
		--><!--<emma enabled="true">
			<instr instrpath="${outputDir}" destdir="${instrumentDir}" metadatafile="${coverage.dir}/metadata.emma" merge="true">
				<filter excludes="*Test*" />
			</instr>
		</emma>-->
<!--	</target>
	
	<target name="junit" depends="instrument">
		<property name="report.dir"  value="test-reports"/>
		<mkdir dir="${report.dir}"/>
		<junit fork="yes">
			<classpath refid="classpath.test" />
			
			<formatter type="xml" />
			<batchtest fork="yes" todir="${report.dir}">
				<fileset dir="${outputDir}">
					<include name="**/Test*.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="coverage-report" depends="junit">
		<cobertura-report format="xml" srcdir="${sourceDir}" destdir="cobertura"/>
		--><!--
		<emma enabled="true">
			<report sourcepath="${sourceDir}" depth="all">
				<infileset dir="." includes="*.em, *.ec, *.emma" />
				<infileset dir="coverage" includes="*.em, *.ec, *.emma" />
			
				<fileset dir="." >
					<include name="**/*.ec" />
					<include name="**/*.em" />
					<include name="**/*.emma" />
				</fileset>			

				<xml outfile="${coverage.dir}/coverage.xml" depth="method"/>
			</report>
		</emma>-->
	<!--</target>
	
	--><!-- ====================================================== -->
	<!-- Deploy to developement updater -->
	<!-- ====================================================== -->
<!--	<target name="deploy" depends="compile,junit">
		<delete dir="${deployDir}" />
		<mkdir dir="${deployDir}" />
		<copy todir="${deployDir}">
			<fileset dir="${outputDir}">
				<exclude name="**/tests/" />
			</fileset>
			<fileset dir="${requiredDir}"/>
		</copy>
	</target>
	
	--><!-- ====================================================== -->
	<!-- Batch: JavaDoc, Deploy -->
	<!-- ====================================================== -->
<!--	<target name="javadoc_deploy" depends="deploy,docs">
	</target>
	
	<target name="style" depends="findbugs,checkstyle,coverage-report">
	</target>
	
	--><!-- ====================================================== -->
	<!-- Batch: JavaDoc, Deploy, Style -->
	<!-- ====================================================== -->
	<!--	<target name="hudson" depends="deploy,docs,style">
	</target>
-->
</project>